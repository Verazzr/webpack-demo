Compilation {
  _plugins: { 'child-compiler': [ [Function] ] },
  compiler:
   Compiler {
     _plugins:
      { 'before-run': [Array],
        compilation: [Array],
        'this-compilation': [Array],
        'after-resolvers': [Array],
        'entry-option': [Array],
        make: [Array],
        'after-emit': [Array],
        'watch-run': [Array],
        run: [Array],
        'after-compile': [Array] },
     outputPath: '/Users/yang/Documents/blog/webpack-demo/public',
     outputFileSystem:
      NodeOutputFileSystem {
        mkdirp: [Object],
        mkdir: [Function: bound ],
        rmdir: [Function: bound ],
        unlink: [Function: bound ],
        writeFile: [Function: bound ],
        join: [Function: bound join] },
     inputFileSystem:
      CachedInputFileSystem {
        fileSystem: NodeJsInputFileSystem {},
        _statStorage: [Object],
        _readdirStorage: [Object],
        _readFileStorage: [Object],
        _readJsonStorage: [Object],
        _readlinkStorage: [Object],
        _stat: [Function: bound bound ],
        _statSync: [Function: bound bound ],
        _readdir: [Function: bound readdir],
        _readdirSync: [Function: bound readdirSync],
        _readFile: [Function: bound bound readFile],
        _readFileSync: [Function: bound bound ],
        _readJson: [Function: bound ],
        _readJsonSync: [Function: bound ],
        _readlink: [Function: bound bound ],
        _readlinkSync: [Function: bound bound ] },
     recordsInputPath: undefined,
     recordsOutputPath: undefined,
     records: {},
     fileTimestamps: {},
     contextTimestamps: {},
     resolvers: { normal: [Object], loader: [Object], context: [Object] },
     parser:
      { plugin: [Function: deprecated],
        apply: [Function: deprecated] },
     options:
      { devtool: 'eval-source-map',
        entry: '/Users/yang/Documents/blog/webpack-demo/app/main.js',
        output: [Object],
        devServer: [Object],
        module: [Object],
        plugins: [Array],
        context: '/Users/yang/Documents/blog/webpack-demo',
        cache: true,
        target: 'web',
        node: [Object],
        performance: [Object],
        resolve: [Object],
        resolveLoader: [Object] },
     context: '/Users/yang/Documents/blog/webpack-demo',
     watchFileSystem:
      NodeWatchFileSystem {
        inputFileSystem: [Object],
        watcherOptions: [Object],
        watcher: [Object] },
     name: undefined,
     dependencies: undefined },
  resolvers:
   { normal: Resolver { _plugins: [Object], fileSystem: [Object] },
     loader: Resolver { _plugins: [Object], fileSystem: [Object] },
     context: Resolver { _plugins: [Object], fileSystem: [Object] } },
  inputFileSystem:
   CachedInputFileSystem {
     fileSystem: NodeJsInputFileSystem {},
     _statStorage:
      Storage {
        duration: 60000,
        running: Map {},
        data: Map {},
        levels: [Array],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _readdirStorage:
      Storage {
        duration: 60000,
        running: Map {},
        data: Map {},
        levels: [Array],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _readFileStorage:
      Storage {
        duration: 60000,
        running: Map {},
        data: Map {},
        levels: [Array],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _readJsonStorage:
      Storage {
        duration: 60000,
        running: Map {},
        data: Map {},
        levels: [Array],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _readlinkStorage:
      Storage {
        duration: 60000,
        running: Map {},
        data: Map {},
        levels: [Array],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _stat: [Function: bound bound ],
     _statSync: [Function: bound bound ],
     _readdir: [Function: bound readdir],
     _readdirSync: [Function: bound readdirSync],
     _readFile: [Function: bound bound readFile],
     _readFileSync: [Function: bound bound ],
     _readJson: [Function: bound ],
     _readJsonSync: [Function: bound ],
     _readlink: [Function: bound bound ],
     _readlinkSync: [Function: bound bound ] },
  options:
   { devtool: 'eval-source-map',
     entry: '/Users/yang/Documents/blog/webpack-demo/app/main.js',
     output:
      { path: '/Users/yang/Documents/blog/webpack-demo/public',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        chunkLoadTimeout: 120000,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     devServer:
      { contentBase: './public',
        inline: true,
        historyApiFallback: true },
     module:
      { rules: [Array],
        unknownContextRequest: '.',
        unknownContextRegExp: false,
        unknownContextRecursive: true,
        unknownContextCritical: true,
        exprContextRequest: '.',
        exprContextRegExp: false,
        exprContextRecursive: true,
        exprContextCritical: true,
        wrappedContextRegExp: /.*/,
        wrappedContextRecursive: true,
        wrappedContextCritical: false,
        strictExportPresence: false,
        strictThisContextOnImports: false,
        unsafeCache: true },
     plugins: [ [Object] ],
     context: '/Users/yang/Documents/blog/webpack-demo',
     cache: true,
     target: 'web',
     node:
      { console: false,
        process: true,
        global: true,
        Buffer: true,
        setImmediate: true,
        __filename: 'mock',
        __dirname: 'mock' },
     performance: { maxAssetSize: 250000, maxEntrypointSize: 250000, hints: false },
     resolve:
      { unsafeCache: true,
        modules: [Array],
        extensions: [Array],
        mainFiles: [Array],
        aliasFields: [Array],
        mainFields: [Array],
        cacheWithContext: false },
     resolveLoader:
      { unsafeCache: true,
        mainFields: [Array],
        extensions: [Array],
        mainFiles: [Array],
        cacheWithContext: false } },
  outputOptions:
   { path: '/Users/yang/Documents/blog/webpack-demo/public',
     filename: 'bundle.js',
     chunkFilename: '[id].bundle.js',
     library: '',
     hotUpdateFunction: 'webpackHotUpdate',
     jsonpFunction: 'webpackJsonp',
     libraryTarget: 'var',
     sourceMapFilename: '[file].map[query]',
     hotUpdateChunkFilename: '[id].[hash].hot-update.js',
     hotUpdateMainFilename: '[hash].hot-update.json',
     crossOriginLoading: false,
     chunkLoadTimeout: 120000,
     hashFunction: 'md5',
     hashDigest: 'hex',
     hashDigestLength: 20,
     devtoolLineToLine: false,
     strictModuleExceptionHandling: false },
  bail: undefined,
  profile: undefined,
  performance: { maxAssetSize: 250000, maxEntrypointSize: 250000, hints: false },
  mainTemplate:
   MainTemplate {
     _plugins:
      { startup: [Array],
        render: [Array],
        'local-vars': [Array],
        require: [Array],
        'module-obj': [Array],
        'require-extensions': [Array],
        'jsonp-script': [Array],
        'require-ensure': [Array],
        bootstrap: [Array],
        'hot-bootstrap': [Array],
        hash: [Array] },
     outputOptions:
      { path: '/Users/yang/Documents/blog/webpack-demo/public',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        chunkLoadTimeout: 120000,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     requireFn: '__webpack_require__' },
  chunkTemplate:
   ChunkTemplate {
     _plugins: { render: [Array], hash: [Array] },
     outputOptions:
      { path: '/Users/yang/Documents/blog/webpack-demo/public',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        chunkLoadTimeout: 120000,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  hotUpdateChunkTemplate:
   HotUpdateChunkTemplate {
     _plugins: { render: [Array], hash: [Array] },
     outputOptions:
      { path: '/Users/yang/Documents/blog/webpack-demo/public',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        chunkLoadTimeout: 120000,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  moduleTemplate:
   ModuleTemplate {
     _plugins: {},
     outputOptions:
      { path: '/Users/yang/Documents/blog/webpack-demo/public',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        chunkLoadTimeout: 120000,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  semaphore: Semaphore { available: 100, waiters: [] },
  entries: [],
  preparedChunks: [],
  entrypoints: {},
  chunks: [],
  namedChunks: {},
  modules: [],
  _modules: {},
  cache: {},
  records: {},
  nextFreeModuleIndex: undefined,
  nextFreeModuleIndex2: undefined,
  additionalChunkAssets: [],
  assets: {},
  errors: [],
  warnings: [],
  children: [],
  dependencyFactories: Map {},
  dependencyTemplates: Map { 'hash' => '' },
  childrenCounters: {},
  fileTimestamps: {},
  contextTimestamps: {},
  name: undefined,
  compilationDependencies: [] }
